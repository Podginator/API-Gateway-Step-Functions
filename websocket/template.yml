AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Websocket for PDF Generator backend 
  SAM Template that has the DynamoDB table and Lambda
  functions needed to demonstrate the Websocket protocol on API Gateway.

Parameters: 
    TableName:
        Type: String
        Default: 'websocket_table'
        Description: (Required) The name of the new DynamoDB to store connection identifiers for each connected clients. Minimum 3 characters
        MinLength: 3
        MaxLength: 50
        AllowedPattern: ^[A-Za-z_]+$
        ConstraintDescription: 'Required. Can be characters and underscore only. No numbers or special characters allowed.'

Resources:
    WebSocketGateway:
        Type: AWS::ApiGatewayV2::Api
        Properties:
            Name: WebSocketGateway
            ProtocolType: WEBSOCKET
            RouteSelectionExpression: "$request.body.action"
    ConnectRoute:
        Type: AWS::ApiGatewayV2::Route
        Properties:
            ApiId: !Ref WebSocketGateway
            RouteKey: $connect
            AuthorizationType: NONE
            OperationName: ConnectRoute
            Target: !Join [ '/', ['integrations', !Ref ConnectInteg]]
    ConnectInteg:
        Type: AWS::ApiGatewayV2::Integration
        Properties:
            ApiId: !Ref WebSocketGateway
            Description: Connect Integration
            IntegrationType: AWS_PROXY
            IntegrationUri: 
                Fn::Sub:
                    arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
    DisconnectRoute:
        Type: AWS::ApiGatewayV2::Route
        Properties:
            ApiId: !Ref WebSocketGateway
            RouteKey: $disconnect
            AuthorizationType: NONE
            OperationName: DisconnectRoute
            Target: !Join [ '/', ['integrations', !Ref DisconnectInteg]]
    DisconnectInteg:
        Type: AWS::ApiGatewayV2::Integration
        Properties:
            ApiId: !Ref WebSocketGateway
            Description: Disconnect Integration
            IntegrationType: AWS_PROXY
            IntegrationUri: 
                Fn::Sub:
                    arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations
    Deployment:
        Type: AWS::ApiGatewayV2::Deployment
        DependsOn:
        - DisconnectRoute
        Properties:
            ApiId: !Ref WebSocketGateway
    Stage:
        Type: AWS::ApiGatewayV2::Stage
        Properties:
            StageName: Prod
            Description: Prod Stage
            DeploymentId: !Ref Deployment
            ApiId: !Ref WebSocketGateway
    ConnectionsTable:
        Type: AWS::DynamoDB::Table
        Properties:
            AttributeDefinitions:
            - AttributeName: "connectionId"
              AttributeType: "S"
            KeySchema:
            - AttributeName: "connectionId"
              KeyType: "HASH"
            ProvisionedThroughput:
                ReadCapacityUnits: 5
                WriteCapacityUnits: 5
            SSESpecification:
                SSEEnabled: True
            TimeToLiveSpecification:
                AttributeName: "ttl"
                Enabled: True
            TableName: !Ref TableName
    OnConnectFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: onconnect/
            Handler: app.handler
            MemorySize: 256
            Runtime: nodejs12.x
            Environment:
                Variables:
                    TABLE_NAME: !Ref TableName
            Policies:
            - DynamoDBCrudPolicy:
                TableName: !Ref TableName
    OnConnectPermission:
        Type: AWS::Lambda::Permission
        DependsOn:
        - WebSocketGateway
        Properties:
            Action: lambda:InvokeFunction
            FunctionName: !Ref OnConnectFunction
            Principal: apigateway.amazonaws.com
    OnDisconnectFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: ondisconnect/
            Handler: app.handler
            MemorySize: 256
            Runtime: nodejs12.x
            Environment:
                Variables:
                    TABLE_NAME: !Ref TableName
            Policies:
                - DynamoDBCrudPolicy:
                    TableName: !Ref TableName
    OnDisconnectPermission:
        Type: AWS::Lambda::Permission
        DependsOn:
        - WebSocketGateway
        Properties:
            Action: lambda:InvokeFunction
            FunctionName: !Ref OnDisconnectFunction
            Principal: apigateway.amazonaws.com    
Outputs:
    ConnectionsTableArn:
        Description: "Connections table ARN"
        Value: !GetAtt ConnectionsTable.Arn
    
    OnConnectFunctionArn:
        Description: "OnConnect function ARN"
        Value: !GetAtt OnConnectFunction.Arn
    
    OnDisconnectFunctionArn:
        Description: "OnDisconnect function ARN"
        Value: !GetAtt OnDisconnectFunction.Arn
    
    WebSocketURI:
        Description: "The WSS Protocol URI to connect to"
        Value: !Join [ '', [ 'wss://', !Ref WebSocketGateway, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'Stage'] ]

    SendWebsocketMessageURI: 
        Description: "The URI to send global messages" 
        Value: !Join ['', ['https://', !Ref WebSocketGateway, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'Stage', '/@connections/']]
        Export: 
            Name: "SendWebsocketMessageURI"